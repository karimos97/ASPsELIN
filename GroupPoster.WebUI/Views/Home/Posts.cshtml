@{
    ViewData["Title"] = "Posts";
}

<h1>Posts</h1>
<div class="col-12">
    <label for="Title">Title</label>
    <input type="text" class="form-control" v-model="Title" name="Title" id="Title">
    <label for="Content">Content</label>
    <textarea type="text" class="form-control" v-model="Content" name="Content" id="Content"></textarea>
    <div class="text-center">
        <button class="btn btn-primary my-4 px-auto" v-on:click="Add">Add</button>
    </div>
</div>

<table class="table table-striped table-inverse">
    <thead>
        <tr class="d-flex">
            <th scope="col" class="col-1">#</th>
            <th scope="col" class="col-3">Title</th>
            <th scope="col" class="col-6">Content</th>
            <th scope="col" class="col-2"></th>
        </tr>
    </thead>
    <tbody>
        <tr v-for="post in posts" class="d-flex">
            <th scope="row" class="col-1">{{post.id}}</th>
            <td class="col-4">
                <input v-show="post.titleSelected" type="text" v-model="post.title" v-on:change="Update(post, 'titleSelected')"/>
                <span v-show="!post.titleSelected" class="btn" v-on:click="Reverse(post, 'titleSelected')">{{post.title}}</span>
            </td>
            <td class="col-4">  
                <textarea v-show="post.contentSelected" type="text" v-model="post.content" v-on:change="Update(post, 'contentSelected')"></textarea>
                <span v-show="!post.contentSelected" class="btn" v-on:click="Reverse(post, 'contentSelected')">{{post.content}}</span>
            </td>
            <td class="col-3">
                <button class="btn btn-danger" v-on:click="Delete(post)">Delete</button>
            </td>
        </tr>
    </tbody>
</table>

@section Scripts
{
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                Title: '',
                api: '../api/posts',
                Content: '',
                posts: []
            },

            created() {
                this.Get();
            },

            methods: {
                Delete: function (post) {
                    axios.delete(this.api, { data: { id: post.id } }).then(Response => {
                        var index = this.posts.findIndex((postToCheck) => post.id == postToCheck.id);
                        this.posts.splice(index, 1);
                    });
                },

                Add: function () {
                    if (this.Title !== '' && this.Content != '') {
                        axios.post(this.api, { title: this.Title, content: this.Content}).then(Response => {
                            var postId = Response.data;
                            var postTitle = this.Title;
                            var postContent = this.Content;
                            this.posts.push(this.CreatePost({
                                id: postId,
                                title: postTitle,
                                content: postContent
                            }));
                        });
                        return;
                    }

                    alert('All Fields Must Be Filled!');
                },

                CreatePost(post) {
                    return {
                        id: post.id,
                        title: post.title,
                        content: post.content,
                        titleSelected: false,
                        contentSelected: false,
                    }
                },

                Get: function () {
                    axios.get(this.api).then(Response => {
                        console.log(Response);
                        var data = Response.data
                        for (var v = 0; v < data.length; v++) {
                            this.posts.push(this.CreatePost(data[v]));
                        }
                    });
                },

                Update: function (post, target) {
                    axios.put(this.api, post).then(Response => console.log('updated!'));
                    this.Reverse(post, target);
                },

                Reverse: function (post, target) {
                    post[target] = !post[target];
                }
            }
        });
    </script>
}